/* Import Normalize.css from a CDN */
@import url('https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css');

/* Universal box-sizing rule */
*, *::before, *::after {
    box-sizing: border-box;
}

/* Custom properties and style declarations */

:root {
    --color-primary: #d73953;
    --color-black: #090909;
    --color-white: #ffffff;
    --color-light-grey: #f3f3f3;
    --color-dark-grey: #353535;
    --text-color: var(--color-black);
    --font-family-base: "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
    --font-family-title: "Raleway", "Helvetica Neue", Helvetica, Arial, sans-serif;
    --font-size-small: 1.2rem;
    --font-size-medium: 1.6rem;
    --font-size-large: 1.8rem;
    --font-size-x-large: 2.3rem;
    --font-size-xx-large: 4.8rem;
    --font-weight-regular: 400;
    --font-weight-bold: 700;
    --line-height-small: 1.2;
    --line-height-base: 1.5;
    --line-height-big: 1.8;
    --section-header-align: center;
    --section-tagline-transform: uppercase;
    --section-title-margin: 0;
    --section-title-color: var(--color-black);
    --section-padding: 5rem 0;
    --section-header-padding: 0 0 3rem;
    --section-body-padding: 0 0 3rem;
    --section-footer-padding: 3rem 0 0;
    --section-footer-align: center;
    --footer-padding: 5rem 0 1rem;
    --nav-item-font-family: var(--font-family-title);
    --nav-item-font-weight: var(--font-weight-bold);
    --nav-item-font-size: var(--font-size-medium);
    --nav-item-letter-spacing: 0.04rem;
    --nav-item-display: inline-block;
    --nav-item-margin: 0 0 3rem 0;
    --nav-item-link-hover: var(--color-white);
    --section-tagline-margin: 0;

    --button-display: inline-block;
    --button-padding: 1.5rem 3rem;
    --button-border: 0.2rem solid var(--color-primary);
    --button-color: var(--color-black);
    --button-text-decoration: none;
    --button-font-size: var(--font-size-large);
    --button-hover-color: var(--color-white);
    --button-hover-text-decoration: none;
    --button-hover-background: var(--color-primary);

    --header-padding: 4rem 0 0;
    --header-logo-position: relative;
    --header-logo-link-display: inline-block;
    --header-logo-link-position: absolute;
    --header-logo-link-top: -1rem;
    --header-logo-link-left: 0;

    --transition-duration: .3s;
    --transition-cubic-bezier: cubic-bezier(0.17, 0.67, 0, 1.01);
}

html {
    scroll-behavior: smooth;
    font-size: 62.5%; /* 62.5% of the default size (e.g., 10px if the default is 16px) */
}

body {
    color: var(--text-color);
    font-family: var(--font-family-base);
    font-size: var(--font-size-medium);
    font-weight: var(--font-weight-regular);
    line-height: var(--line-height-base); /* Set the minimum height of line boxes */
}

h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-family-title);
    font-weight: var(--font-weight-bold);
}

a:link {
    color: var(--text-color);
    text-decoration: none; /* Remove text decoration from anchor elements */
}

a:visited {
    font-style: italic; /* Italicize the text */
}

a:hover {
    text-decoration: underline; /* Decorate the links with an underline when hovering */
}

a:active {
    background-color: var(--color-light-grey); /* Set the background color to color-light-grey when active */
}

.visually-hidden {
    display: none;
}

.section-header {
    text-align: var(--section-header-align); /* Set horizontal alignment of section-header */
}

.section-title {
    font-family: var(--font-family-title);
    font-size: var(--font-size-xx-large);
    font-weight: var(--font-weight-bold);
    margin: var(--section-title-margin);
    color: var(--section-title-color);
}

.card-category, .section-tagline {
    color: var(--color-primary);
}

.section-tagline {
    font-family: var(--font-family-title);
    text-transform: var(--section-tagline-transform);
    font-weight: var(--font-weight-bold);
    margin: var(--section-tagline-margin);
}

.container {
    width: 960px;
    margin-left: auto;
    margin-right: auto;
}

.section {
    padding: var(--section-padding); /* Set padding on all 4 sides */
}

.section-header {
    padding: var(--section-header-padding); /* Set padding on all 4 sides */
}

.section-body {
    padding: var(--section-body-padding); /* Set padding on all 4 sides */
}

.section-footer {
    padding: var(--section-footer-padding); /* Set padding on all 4 sides */
    text-align: var(--section-footer-align); /* Set horizontal alignment */
}

.footer {
    padding: var(--footer-padding); /* Set padding on all 4 sides */
}

.navbar-menu {
    float: right; /* Let navbar-menu float to the right */
}

.nav {
    margin: 0; /* Set margin on all sides to 0 */
    padding: 0; /* Set padding on all sides to 0 */
    list-style: none; /* No list style for the nav */
    text-align: center; /* Center align the text */
}

.nav .nav-item {
    font-family: var(--nav-item-font-family);
    font-weight: var(--nav-item-font-weight);
    font-size: var(--nav-item-font-size);
    letter-spacing: var(--nav-item-letter-spacing);
    display: var(--nav-item-display);
    margin: var(--nav-item-margin);
}

.nav .nav-link {
    display: block;
    padding: 0.5rem 1rem;
}

/* Edit the nav-item-link-hover property */
.nav .nav-link:hover {
    color: var(--nav-item-link-hover);
}

/* Target the before pseudo elements of nav-link inside nav */
.nav .nav-link::before {
    content: ""; /* Set content value to empty */
    position: absolute; /* Absolutely position the targeted elements */
    top: 0; /* Set vertical position to 0 */
    left: 0; /* Set horizontal position to 0 */
    background-color: var(--color-white); /* Set background color to color-white */
    width: 0; /* Set width to 0 */
    height: 0.2rem; /* Set height to 20% of the root element value */
    transition: var(--transition-duration) var(--transition-cubic-bezier);
}

/* Target the before pseudo elements of nav-link when nav-item is hover and is inside nav */
.nav .nav-item:hover .nav-link::before {
    background-color: var(--color-primary); /* Set background color to color-primary */
    width: 100%; /* Set width to 100% */
}

ul.row {
    margin: 0;
    padding: 0;
    list-style: none;
}

[class^="col-"] {
    float: left;
    padding: 0.5rem;
}

.col-1-3 {
    width: 33.33%;
}

.col-1-2 {
    width: 50%;
}

.footer ul {
    text-align: right;
}

.footer-copyright {
    margin: 0;
    font-size: var(--font-size-small);
    color: var(--text-color);
}

.footer-address {
    color: var(--text-color); /* Set text color to text-color property */
}

.social-link {
    display: block; /* Render as block element */
}

.social-link > svg {
    fill: var(--text-color); /* Fill color of SVG children with text-color variable */
}

.card-services .card-title {
    margin: 0; /* No margin on all sides */
}

.card-services a {
    display: block; /* Render as block element */
    padding: 2rem; /* Set padding to 2x the root element */
    background-color: var(--color-light-grey); /* Set background color to color-light-grey */
}

.card-services a:hover {
    color: var(--color-white); /* Set foreground color to color-white */
    background-color: var(--color-primary); /* Set background color to color-primary */
    text-decoration: none; /* Remove text decoration */
}

/* Target card-outer within card-work */
.card-work .card-outer {
    position: relative; /* Relatively position the element */
    overflow: hidden; /* Hide any overflow */
}

/* Target the image inside card-image inside card-work */
.card-work .card-image img {
    height: 30rem; /* Set the height of these elements */
    width: 100%; /* Set the width of this element */
    object-fit: cover; /* Set property: object-fit, Value: cover */
    vertical-align: bottom; /* Vertically align to the bottom */
}

/* Target card-inner inside card-work */
.card-work .card-inner {
    position: absolute; /* Absolutely position the element */
    top: -0.1rem; /* Vertically position with -0.1rem on the top */
    left: -0.1rem; /* Horizontally position the element with -0.1rem on the left */
    right: -0.1rem; /* Horizontally position the element with -0.1rem on the right */
    z-index: 1; /* Set the z-order to 1 */
    transition: var(--transition-duration) var(--transition-cubic-bezier);
}

/* Target card-inner when card-work is hovered */
.card-work:hover .card-inner {
    background-color: rgba(0, 0, 0, 0.7); /* Set the background color to rgba(0, 0, 0, 0.7) */
}

/* Transformations on card-work */
.card-work:hover .card-image {
    transform: scale(1.2);
    transition: var(--transition-duration) var(--transition-cubic-bezier);
}

.card-work:hover .card-outer {
    transform: scale(0.95);
}

/* Target card-title inside card-work */
.card-work .card-title {
    text-align: center; /* Center align the text */
    margin: 0; /* Margins all around should be 0 */
    opacity: 0; /* Opacity should be set to its lowest value */
    height: 100%; /* The height of the selected elements should be 100% */
    position: relative; /* The position should be relative */
}

/* Target the link inside card-title and card-work */
.card-work .card-title a {
    display: block; /* Elements display as blocks */
    text-decoration: none; /* Text should not be decorated */
    padding-top: 45%; /* Padding on the top should be 45% */
}

/* Create the after pseudo elements of the link (inside card-title and card-work) */
.card-work .card-title a::after {
    content: ""; /* Set the content property of these elements should have an empty value */
    position: absolute; /* Absolutely position the selected elements */
    top: 0; /* Set the top positions to be 0 */
    right: 0; /* Set the right positions to be 0 */
    left: 0; /* Set the left positions to be 0 */
    bottom: 0; /* Set the bottom positions to be 0 */
}

/* Target card-title when card-work is hovered */
.card-work:hover .card-title {
    opacity: 1; /* The opacity of these elements should be set to the value of 1 */
}

.button {
    display: var(--button-display);
    padding: var(--button-padding);
    border: var(--button-border);
    font-size: var(--button-font-size);
    color: var(--button-color);
    text-decoration: var(--button-text-decoration);
}

.button:hover {
    color: var(--button-hover-color);
    text-decoration: var(--button-hover-text-decoration);
    background-color: var(--button-hover-background);
    transition-duration: var(--transition-duration);
    transition-property: color, background-color;
}

[data-section-theme="dark"] {
    --button-color: var(--color-white);
}

/* New rules for card-testimonial styling */

.card-testimonial {
    text-align: center; /* Center align the text */
}

.card-testimonial .card-avatar {
    border-radius: 50%; /* Round the radius on all sides at 50% */
    width: 10rem; /* Set the width to 10x the root element */
    height: 10rem; /* Set the height to 10x the root element */
}

.card-testimonial .card-quote cite {
    display: block; /* Style as a block level element */
    padding-top: 1rem; /* Pad the top with 1x the root element */
    color: var(--color-primary); /* Set the foreground color value to the value of the color-primary variable */
}

/* Target the card-quote inside card-testimonial */
.card-testimonial .card-quote {
    position: relative; /* Style it so that the position is relative to its parent */
}

/* Target the before pseudo-element of card-quote inside card-testimonial */
.card-testimonial .card-quote::before {
    content: "\201C"; /* Set the content to the value \201C */
    position: absolute; /* Absolutely position the selected elements */
    top: -4.5rem; /* Set the vertical position to -4.5rem */
    left: -1rem; /* Set the horizontal position from the left to -1rem */
    color: #efeded; /* Set the foreground color to #efeded */
    font-size: 10rem; /* Set the font size to 10rem */
    z-index: -1; /* Set the z-order to -1 */
}

.section-hero {
    background-size: 90rem auto; /* Set size of background using 2-value syntax */
}

.section-hero .section-title {
    margin-bottom: 5rem; /* Add 5rem of margin to the bottom */
}

.section-hero .section-inner {
    padding: 10rem 40rem  2rem 0; /* Add padding on top, right, bottom, left respectively */
}

.header {
    padding: var(--header-padding); /* Pad the header with the value within the variable header-padding */
}

.header-logo {
    position: var(--header-logo-position); /* Position the header-logo with the value of the variable header-logo-position */
}

.header-logo a {
    display: var(--header-logo-link-display); /* Render the links using the value of the variable header-logo-link-display */
    position: var(--header-logo-link-position); /* Position the links with the value of the variable header-logo-link-position */
    top: var(--header-logo-link-top); /* Set the vertical position of the element using header-logo-link-top */
    left: var(--header-logo-link-left); /* Set the horizontal position of the element using header-logo-link-left */
}
